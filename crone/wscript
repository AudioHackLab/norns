top = '../..'


def options(opt):
    opt.load('compiler_c compiler_cxx')

def configure(conf):
    conf.load('compiler_c compiler_cxx')

def build(bld):

    # FIXME: can't seem to get this to work...
    #bld.recurse('softcut/softcut-lib')
    #bld.read_stlib('softcut', paths=['build/crone/softcut/softcut-lib'])
    #bld.read_stlib('softcut', paths=['../../build/crone/softcut/softcut-lib'])


    # this seems to, "almost" work? if lib is built manually
    # but still ultimately fails with "could not find libary"
    bld.read_stlib('softcut', paths=['crone/softcut/softcut-lib/build'])
    
    crone_sources = [
        'src/main.cpp',
        'src/BufDiskWorker.cpp',
        'src/Commands.cpp',
        'src/MixerClient.cpp',
        'src/OscInterface.cpp',
        'src/SoftcutClient.cpp',
        'src/Taper.cpp',
        'src/Window.cpp',
    ]


    bld.program( features='c cxx cxxprogram',
                 source=crone_sources,
                 target='crone',

                 includes=[
                     'src',
                     './',
                     'softcut/softcut-lib/include'
                 ],

                 use=[
                     'ALSA',
                     'LIBLO',
                     'BOOST',
                 ],
                 lib=[
                     'jack',
                     'pthread',
                     'm',
                     'sndfile',
                     'softcut'
                 ],
                 cxxflags=[
                     '-std=c++14',
                     '-O2',
                     '-Wall'
                 ])
